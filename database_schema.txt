CREATE TABLE DepartmentList (
    id INT AUTO_INCREMENT PRIMARY KEY,
    name VARCHAR(100) NOT NULL
);

CREATE TABLE Intern (
    id INT AUTO_INCREMENT PRIMARY KEY,
    unique_application_id VARCHAR(20) NOT NULL UNIQUE,
    id_number VARCHAR(20) NOT NULL UNIQUE,
    full_name VARCHAR(255) NOT NULL,
    email VARCHAR(255) NOT NULL UNIQUE,
    year_of_study INT NOT NULL,
    gender CHAR(1) NOT NULL,
    department_id INT,
    physical_address TEXT,
    phone_number VARCHAR(20),
    county VARCHAR(50),
    sub_county VARCHAR(50),
    ward VARCHAR(50),
    location VARCHAR(255),
    application_status VARCHAR(20) DEFAULT 'Pending',
    FOREIGN KEY (department_id) REFERENCES DepartmentList(id) ON DELETE SET NULL
);

CREATE TABLE EducationBackground (
    id INT AUTO_INCREMENT PRIMARY KEY,
    intern_id INT NOT NULL UNIQUE,
    EducationBackground VARCHAR(255) NOT NULL,
    grade VARCHAR(50) NOT NULL,
    course VARCHAR(50) NOT NULL,
    expected_graduation DATE,
    institution VARCHAR(50) NOT NULL,
    FOREIGN KEY (intern_id) REFERENCES Intern(id) ON DELETE CASCADE
);

CREATE TABLE WorkExperience (
    id INT AUTO_INCREMENT PRIMARY KEY,
    intern_id INT NOT NULL,
    company_name VARCHAR(50) NOT NULL,
    job_title VARCHAR(50) NOT NULL,
    start_date DATE,
    end_date DATE,
    job_description TEXT NOT NULL,
    FOREIGN KEY (intern_id) REFERENCES Intern(id) ON DELETE CASCADE
);

CREATE TABLE Department (
    id INT AUTO_INCREMENT PRIMARY KEY,
    intern_id INT NOT NULL UNIQUE,
    department_id INT NOT NULL,
    sub_department VARCHAR(40) NOT NULL,
    preference TEXT NOT NULL,
    FOREIGN KEY (intern_id) REFERENCES Intern(id) ON DELETE CASCADE,
    FOREIGN KEY (department_id) REFERENCES DepartmentList(id) ON DELETE CASCADE
);

CREATE TABLE UploadedFiles (
    id INT AUTO_INCREMENT PRIMARY KEY,
    intern_id INT NOT NULL UNIQUE,
    passport VARCHAR(255) NOT NULL,
    transcript VARCHAR(255) NOT NULL,
    CV VARCHAR(255) NOT NULL,
    recommendation VARCHAR(255) NOT NULL,
    FOREIGN KEY (intern_id) REFERENCES Intern(id) ON DELETE CASCADE
);
